name: Publish artfiacts to Sonatype Repo

on:
   push:
     branches: [master]
     tags:
       - v[0-9].[0-9]+.[0-9]+
   pull_request:

jobs:
  build-native:
    runs-on: ${{ matrix.os }}
    env:
      target-path: ${{ matrix.platform }}-${{ matrix.arch }}
    strategy:
      matrix:
        platform: [linux, win32, darwin]
        arch: [x86, x86-64, aarch64]
        exclude:
          - platform: darwin
            arch: x86
          - platform: win32
            arch: aarch64
        include:
          - platform: darwin
            os: macos-12
            compiled-path: libcurve25519.dylib
          - platform: linux
            os: ubuntu-20.04
            extra-packages: gcc-7 g++-7
            compiled-path: libcurve25519.so
          - platform: linux
            arch: aarch64
            extra-packages: gcc-8-aarch64-linux-gnu g++-8-aarch64-linux-gnu
          - platform: linux
            arch: x86
            extra-packages: gcc-7-multilib g++-7-multilib
          - platform: win32
            os: ubuntu-20.04
            compiled-path: curve25519.dll
            extra-packages: mingw-w64
    steps:
      - uses: actions/checkout@v3
      - name: Install build tools
        if: ${{ matrix.extra-packages }}
        run: |
          sudo apt-get update
          sudo apt-get install -y ${{ matrix.extra-packages }}
      - name: Build native image
        run: |
          mkdir -p native/build/target/${{ matrix.target-path || env.target-path }}
          cd native/build
          cp ../toolchains/${{ matrix.platform }}-${{ matrix.arch }}.toolchain current.toolchain || touch current.toolchain
          cmake -DCMAKE_TOOLCHAIN_FILE=current.toolchain -DCMAKE_BUILD_TYPE=Release ..
          cmake --build .
          mv ${{ matrix.compiled-path }} target/${{ matrix.target-path || env.target-path }}/
      - name: Upload result
        uses: actions/upload-artifact@v3
        with:
          name: native-images.zip
          path: native/build/target/*

  publish:
    runs-on: ubuntu-latest
    needs: build-native
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: temurin
          cache: gradle
      - run: |
          mkdir -p java/src/main/resources
      - uses: actions/download-artifact@v3
        with:
          name: native-images.zip
          path: java/src/main/resources/
      - name: Publish Snapshot
        if: ${{ !contains(github.ref, '/tags/') }}
        run: |
          ./gradlew publishToSonatype \
            -PsonatypeUsername='${{ secrets.OSSRH_USERNAME }}' \
            -PsonatypePassword='${{ secrets.OSSRH_PASSWORD }}' \
            -PgpgKey='${{ secrets.OSSRH_GPG_KEY_ASCII }}' \
            -PgpgPassphrase='${{ secrets.OSSRH_GPG_PASSPHRASE }}'
      - name: Publish Release
        if: contains(github.ref, '/tags/')
        run: |
          ./gradlew publishToSonatype closeAndReleaseRepository \
            -PsonatypeUsername='${{ secrets.OSSRH_USERNAME }}' \
            -PsonatypePassword='${{ secrets.OSSRH_PASSWORD }}' \
            -PgpgKey='${{ secrets.OSSRH_GPG_KEY_ASCII }}' \
            -PgpgPassphrase='${{ secrets.OSSRH_GPG_PASSPHRASE }}'
