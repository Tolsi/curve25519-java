name: Release

on:
  push:
    branches: [native-from-jar]
#    tags:
#      - v[0-9].[0-9]+.[0-9]+

jobs:
  build-native:
    runs-on: ${{ matrix.os }}
    env:
      target-path: ${{ matrix.platform }}-${{ matrix.arch }}
    strategy:
      matrix:
        platform: [linux, win32, macos]
        arch: [x86, x86-64, aarch64]
        exclude:
          - platform: macos
            arch: x86
          - platform: macos
            arch: aarch64
          - platform: win32
            arch: aarch64
        include:
          - platform: macos
            os: macos-latest
            compiled-path: libcurve25519.dylib
            target-path: darwin
          - platform: linux
            os: ubuntu-latest
            compiled-path: libcurve25519.so
          - platform: linux
            arch: aarch64
            extra-packages: gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          - platform: linux
            arch: x86
            extra-packages: gcc-multilib g++-multilib
          - platform: win32
            os: ubuntu-latest
            compiled-path: curve25519.dll
            extra-packages: mingw-w64
    steps:
      - uses: actions/checkout@v2
      - name: Install build tools
        if: ${{ matrix.extra-packages }}
        run: sudo apt install -y ${{ matrix.extra-packages }}
      - name: Build native image
        run: |
          mkdir -p native/build/target/${{ matrix.target-path || env.target-path }}
          cd native/build
          cp ../toolchains/${{ matrix.platform }}-${{ matrix.arch }}.toolchain current.toolchain || touch current.toolchain
          cmake -DCMAKE_TOOLCHAIN_FILE=current.toolchain -DCMAKE_BUILD_TYPE=Release ..
          cmake --build .
          mv ${{ matrix.compiled-path }} target/${{ matrix.target-path || env.target-path }}/
      - name: Upload result
        uses: actions/upload-artifact@v2
        with:
          name: native-images.zip
          path: native/build/target/*

  release:
    runs-on: ubuntu-latest
    needs: build-native
    steps:
      - uses: actions/checkout@v2
      - run: |
          echo '${{ secrets.OSSRH_GPG_KEY }}' | base64 -d > secret.gpg
          mkdir -p java/src/main/resources
      - uses: actions/download-artifact@v1
        with:
          name: native-images.zip
          path: java/src/main/resources/
      - name: Stage
        env:
          SONATYPE_REPO: https://oss.sonatype.org/content/repositories/snapshots
          # SONATYPE_REPO: https://oss.sonatype.org/service/local/staging/deploy/maven2
        run:
          ./gradlew uploadArchives
            -PsonatypeRepo=$SONATYPE_REPO
            -PwhisperSonatypeUsername="${{ secrets.OSSRH_USERNAME }}"
            -PwhisperSonatypePassword="${{ secrets.OSSRH_PASSWORD }}"
            -Psigning.secretKeyRingFile=../secret.gpg
            -Psigning.keyId="${{ secrets.OSSRH_GPG_KEY_ID }}"
            -Psigning.password="${{ secrets.OSSRH_GPG_PASSPHRASE }}"
#      - name: Release
#        run:
#          ./gradlew closeAndReleaseRepository
#            -PsonatypeRepo=
#            -PwhisperSonatypeUsername="${{ secrets.SONATYPE_USERNAME }}"
#            -PwhisperSonatypePassword="${{ secrets.SONATYPE_PASSWORD }}"
#            -Psigning.secretKeyRingFile=
#            -Psigning.keyId=
#            -Psigning.password=

