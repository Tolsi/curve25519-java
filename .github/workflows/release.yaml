name: Release

on:
  push:
    tags:
      - v[0-9].[0-9]+.[0-9]+

jobs:
  build-native:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [x86, amd64, aarch64]
        exclude:
          - os: macos-latest
            arch: x86
          - os: macos-latest
            arch: aarch64
          - os: windows-latest
            arch: aarch64
        include:
          - os: ubuntu-latest
            compiled-path: libcurve25519.so
            platform: linux
          - os: macos-latest
            compiled-path: libcurve25519.dylib
            platform: osx
          - os: windows-latest
            compiled-path: Release/curve25519.dll
            platform: windows
          - os: ubuntu-latest
            arch: x86
            bit-model: 32
          - os: ubuntu-latest
            arch: amd64
            bit-model: 64
          - os: ubuntu-latest
            arch: aarch64
            bit-model: 64
          - os: macos-latest
            bit-model: 64
          - os: windows-latest
            arch: x86
            bit-model: 32
          - os: windows-latest
            arch: amd64
            bit-model: 64
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare toolchain
        run: |
          touch jni/current.toolchain
      - name: Prepare linux x86
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.arch == 'x86' }}
        run: |
          cat jni/toolchains/linux-x86.toolchain > jni/current.toolchain
          sudo apt-get install -y gcc-multilib g++-multilib
      - name: Prepare windows x86
        if: ${{ matrix.os == 'windows-latest' && matrix.arch == 'x86' }}
        run: |
          cat jni/toolchains/windows-x86.toolchain > jni/current.toolchain
      - name: Prepare linux arm64
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.arch == 'aarch64' }}
        run: |
          cat jni/toolchains/linux-aarch64.toolchain > jni/current.toolchain
          sudo apt install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
      - name: Build native
        run: |
          mkdir jni/build
          cd jni/build
          cmake -DCMAKE_TOOLCHAIN_FILE=../current.toolchain -DCMAKE_BUILD_TYPE=Release ..
          cmake --build . --config Release
          cd ..
          mkdir -p native/${{ matrix.platform }}${{ matrix.bit-model }}/${{ matrix.arch }}
          mv build/${{ matrix.compiled-path }} ./native/${{ matrix.platform }}${{ matrix.bit-model }}/${{ matrix.arch }}/
      - name: Upload result
        uses: actions/upload-artifact@v2
        with:
          name: native
          path: jni/native/

  release:
    runs-on: ubuntu-latest
    needs: build-native
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download native libs
        uses: actions/download-artifact@v1
        with:
          name: native
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Prepare to build
        run: |
          echo '${{ secrets.GPG_KEY_CONTENTS }}' | base64 -d > publish_key.gpg
          gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.SECRET_PASSPHRASE }}" --output secret.gpg publish_key.gpg
          mkdir -p java/src/main/resources/META-INF/
          cp -r native java/src/main/resources/META-INF/
      - name: Stage
        env:
          SONATYPE_REPO: https://oss.sonatype.org/service/local/staging/deploy/maven2
        run:
          ./gradlew uploadArchives
            -PsonatypeRepo=$SONATYPE_REPO
            -PwhisperSonatypeUsername=${{ secrets.SONATYPE_USERNAME }}
            -PwhisperSonatypePassword=${{ secrets.SONATYPE_PASSWORD }}
            -Psigning.secretKeyRingFile=../secret.gpg
            -Psigning.keyId=${{ secrets.SIGNING_KEY_ID }}
            -Psigning.password=${{ secrets.SIGNING_PASSWORD }}
      - name: Release
        run:
          ./gradlew closeAndReleaseRepository
            -PsonatypeRepo=
            -PwhisperSonatypeUsername=${{ secrets.SONATYPE_USERNAME }}
            -PwhisperSonatypePassword=${{ secrets.SONATYPE_PASSWORD }}
            -Psigning.secretKeyRingFile=
            -Psigning.keyId=
            -Psigning.password=
      - uses: actions/upload-artifact@v2
        with:
          name: released
          path: java/build/libs
